let staticWidth = 900, staticHeight = 720;
let tempsActuel = 0;
let jeu = undefined;
let questionsNumber = 5;
let gameMode = 0;
let emojis = ["	&#128539;", "&#128580;", "&#129300;", "&#128555;"];

function resize() {
	var coef = (innerWidth >= innerHeight * (16 / 9) ? (innerHeight / staticHeight) : (innerWidth / staticWidth));
	document.getElementsByTagName("body")[0].style.transform = "scale(" + coef + ")";
}

setInterval(resize, 100);

class Question {
	id = 0;
	enonce = "";
	points = 1;
	defaultAnswers = [1, 0, 0, 0]; // 1 = bonne r√©ponse, 0 = mauvaise r√©ponse, -1 = r√©ponse masqu√©e
	answersText = ["", "", "", ""];
	time = 3000;

	constructor(enonce, answers, answersText, time = 3000) {
		this.id = idQuestion++;
		this.enonce = enonce;
		this.defaultAnswers = answers;
		this.answersText = answersText;
		this.time = time;
		this.points = 1; // changer plus tard
	}

	IsCorrect(answers) {
		let result = true;

		for (let index = 0; index < 4; index++) {
			if (answers[index] != this.defaultAnswers[index] && this.defaultAnswers[index] > -1) {
				result = false;
				console.log("R√©ponse incorrecte d√©tect√©e √† l'indice " + index);
				break;
			}
		}
		return result;
	}
}

class Jeu {
	totalQuestions = 40;
	tempsReponses = 3000; // en 1/100 secondes
	questions = new Array();
	numQuestionActuelle = 1;
	joueurs = new Array();
	joueurActuel = 1;
	interval;
	timeout;
	mode = 0;

	// R√©cup√®re le multiplicateur de points selon le temps √©coul√© (en 1/100 s)
	GetPointsFromTime(timeElapsed, answers) {
		let coef = -0.0328 * timeElapsed + 103.28;
		let points = this.questions[this.numQuestionActuelle - 1].points;

		return Math.round((this.questions[this.numQuestionActuelle - 1].IsCorrect(answers) ? points * coef : 0));
	}

	ChoixQuestions() {
		const reserve = [...questionsDb[this.mode]];

		for (let index = 0; index < this.totalQuestions; index++) {
			let rdm = Math.floor(Math.random() * reserve.length);

			this.questions.push(reserve[rdm]);
			reserve.splice(rdm, 1);

			if (reserve.length == 0)
				break;
		}
	}

	Valider() {
		document.getElementById("VALIDATION").value = "R√©ponses soumises.";
		document.getElementById("VALIDATION").disabled = true;
		clearInterval(this.interval);
		document.getElementsByTagName("audio")[0].pause();

		document.getElementsByTagName("audio")[3].currentTime = 0;
		document.getElementsByTagName("audio")[3].play();

		// r√©cup des r√©ponses
		let answers = new Array(4);

		answers[0] = document.getElementById("A").classList.contains("checked") ? 1 : 0;
		answers[1] = document.getElementById("B").classList.contains("checked") ? 1 : 0;
		answers[2] = document.getElementById("C").classList.contains("checked") ? 1 : 0;
		answers[3] = document.getElementById("D").classList.contains("checked") ? 1 : 0;

		let numQuestionTmp = this.numQuestionActuelle - 1;

		if (this.questions[numQuestionTmp].defaultAnswers[3] <= -1)
			answers[3] = this.questions[numQuestionTmp].defaultAnswers[3];

		if (this.questions[numQuestionTmp].defaultAnswers[2] <= -1)
			answers[2] = this.questions[numQuestionTmp].defaultAnswers[2];

		let time = this.tempsReponses - tempsActuel;

		let pointsBonus = this.GetPointsFromTime(time, answers);

		this.joueurs[this.joueurActuel - 1].points += pointsBonus;

		clearInterval(this.interval);

		this.timeout = setTimeout(() => this.ProchainJoueur(), 2000);
	}

	ProchaineQuestion() {
		if (this.numQuestionActuelle >= this.questions.length) {
			this.joueurs.sort(compare);
			clearInterval(this.interval);
			this.interval = null;

			document.getElementsByTagName("audio")[0].pause();
			document.getElementsByTagName("audio")[1].pause();

			document.getElementsByTagName("audio")[2].play();

			let str = "";

			if (this.joueurs.length > 1) {
				for (let i = 0; i < this.joueurs.length; i++)
					str += "#" + (i + 1) + " : " + this.joueurs[i].nom + " ‚Äî " + this.joueurs[i].points + "<br>";
			}
			else {
				str = this.joueurs[0].nom + ", vous avez obtenu " + jeu.joueurs[0].points + " points. Bravo.";
			}

			document.getElementById("QuestionContainer").classList.add("hidden");
			document.getElementById("ReponseContainer").classList.add("hidden");
			document.getElementById("ValContainer").classList.add("hidden");
			document.getElementById("End").classList.remove("hidden");

			document.getElementById("ClassementFinal").innerHTML = str;
		}
		else {
			this.joueurActuel = 1;
			this.numQuestionActuelle++;
		}
	}

	CheckRemainingTime() {
		if (tempsActuel > 0)
			tempsActuel--;

			if (jeu.joueurs[0].nom != "Anonyme") {
				document.getElementById("NomJoueur").innerHTML = emojis[this.joueurActuel - 1] + " " + this.joueurs[this.joueurActuel - 1].nom;
				document.getElementById("NomJoueur").classList.add("couleur" + this.joueurs[this.joueurActuel - 1].couleur);
			}

		document.getElementById("Temps").innerHTML = "00:" + NumberFormat(Math.ceil(tempsActuel / 100));

		if (tempsActuel == 0) {
			document.getElementById("A").classList.remove("checked");
			document.getElementById("B").classList.remove("checked");
			document.getElementById("C").classList.remove("checked");
			document.getElementById("D").classList.remove("checked");
			document.getElementById("Temps").innerHTML = "<b style='color: #aa0000'>00:00</b>";

			document.getElementById("VALIDATION").value = "Temps √©coul√©.";
			document.getElementById("VALIDATION").disabled = true;

			tempsActuel = this.tempsReponses;

			clearInterval(this.interval);
			this.timeout = setTimeout(() => this.ProchainJoueur(), 2000);
		}
	}

	ProchainJoueur() {
		document.getElementById("VALIDATION").value = "Valider";
		document.getElementById("VALIDATION").disabled = false;
		document.getElementById("A").classList.remove("checked");
		document.getElementById("B").classList.remove("checked");
		document.getElementById("C").classList.remove("checked");
		document.getElementById("D").classList.remove("checked");
		this.joueurActuel++;

		tempsActuel = this.tempsReponses;

		this.interval = setInterval(() => this.CheckRemainingTime(), 10);

		if (this.joueurActuel > this.joueurs.length) {
			this.ProchaineQuestion();
		}

		document.getElementsByTagName("audio")[0].currentTime = 0;
		document.getElementsByTagName("audio")[0].play();

		this.AfficherQuestion(this.numQuestionActuelle);
	}

	AfficherQuestion(numQuestion) {
		this.numQuestionActuelle = numQuestion;

		if (numQuestion > this.totalQuestions)
			FinJeu();
		else {
			document.getElementById("Numero").innerHTML = NumberFormat(numQuestion);
			numQuestion--;

			document.getElementById("Enonce").innerHTML = this.questions[numQuestion].enonce;

			document.getElementsByTagName("img")[0].src = "./assets/" + this.mode + "/" + this.questions[numQuestion].id + ".jpg";

			document.getElementById("TextA").innerHTML = this.questions[numQuestion].answersText[0];
			document.getElementById("TextB").innerHTML = this.questions[numQuestion].answersText[1];

			if (this.questions[numQuestion].defaultAnswers[2] > -1) {
				document.getElementById("TextC").innerHTML = this.questions[numQuestion].answersText[2];
				document.getElementById("C").classList.remove("hidden");
			}
			else {
				document.getElementById("C").classList.add("hidden");
			}

			if (this.questions[numQuestion].defaultAnswers[3] > -1) {
				document.getElementById("TextD").innerHTML = this.questions[numQuestion].answersText[3];
				document.getElementById("D").classList.remove("hidden");
			}
			else {
				document.getElementById("D").classList.add("hidden");
			}
		}
	}
}

class Joueur {
	nom = "anonyme";
	points = 0;

	constructor(nom, couleur = 0) {
		if (nom != "")
			this.nom = nom;

		this.points = 0;
		this.couleur = couleur;
	}
}

function compare(a, b) {
	if (a.points < b.points) {
		return 1;
	}
	if (a.points > b.points) {
		return -1;
	}
	return 0;
}

function toggleMode() {
	gameMode++;
	gameMode %= questionsDb.length;

	document.getElementById("ModeSwitch").innerHTML = modes[gameMode];
}

function toggleSound() {
	if (document.getElementById("sound").innerHTML == "üîä") {
		document.getElementById("sound").innerHTML = "üîá";
		document.getElementsByTagName("audio")[0].volume = 0;
		document.getElementsByTagName("audio")[1].volume = 0;
		document.getElementsByTagName("audio")[2].volume = 0;
		document.getElementsByTagName("audio")[3].volume = 0;
	}
	else {
		document.getElementById("sound").innerHTML = "üîä";
		document.getElementsByTagName("audio")[0].volume = 1;
		document.getElementsByTagName("audio")[1].volume = 1;
		document.getElementsByTagName("audio")[2].volume = 1;
		document.getElementsByTagName("audio")[3].volume = 1;
	}
}

function toggleQuestionsNumber() {
	questionsNumber += 5;
	questionsNumber = questionsNumber > 30 ? 5 : questionsNumber;

	document.getElementById("QuestionsNumber").innerHTML = "Jouer " + questionsNumber + " questions"
}

function NumberFormat(number, digits = 2) {
	if ((number + "").length < digits) {
		let missingDigits = digits - (number + "").length;
		let zeros = "";

		for (let index = 0; index < missingDigits; index++) {
			zeros += "0";
		}

		return zeros + number;
	}

	return number + "";
}

let modes = ["üë∂üèª Mode FACILE.", "üòê Mode NORMAL.", "üëø Mode HARDCORE !!!"]

let idQuestion = 1;
const questionsDb = new Array();
const questionsF = new Array();
const questionsM = new Array();
const questionsD = new Array();

questionsF.push(new Question("Je vois un panneau stop je m'arr√™te ?", [1, 0, -1, -1], ["Oui", "Non", "", ""]));
questionsF.push(new Question("Comment appelle-t-on un poisson qui sort de l'eau et traverse la route?", [1, 0, 0, -1], ["Un pi√©ton", "Un poisson volant", "Un pied de thon", ""]));
questionsF.push(new Question("Pourquoi les feux de circulation ne jouent-ils jamais √† cache-cache ?", [1, 0, -1, -1], ["Parce qu'ils ont peur de se faire griller !", "Parce que les poulets traversent la route", "", ""]));
questionsF.push(new Question("Si apr√®s avoir bu, vous conduisez en zigzagant, continuez-vous de conduire?", [1, 0, -1, -1], ["Non", "Oui", "", ""]));
questionsF.push(new Question("Je c√®de le passage :", [0, 1, -1, -1], ["A gauche", "A droite", "", ""]));
questionsF.push(new Question("Un b√©b√© peut-il voyager dans les bras d'un adulte et jouer avec le volant?", [0, 1, -1, -1], ["Oui", "Non", "", ""]));
questionsF.push(new Question("Je roule √† 90 km/h, pour m'arr√™ter il faudra :", [0, 1, 0, -1], ["une peau de banane", "Une p√©dale de frein", "faire une cascade", ""]));
questionsF.push(new Question("Je conduis depuis 3 heures, je suis fatigu√© :", [0, 1, 0, -1], ["J'acc√©l√®re pour arriver plus vite", "Je m'arr√™te pour faire une sieste", "Je continue mon parcours", ""]));
questionsF.push(new Question("Je peux d√©passer :", [1, 0, -1, -1], ["Oui", "Non", "", ""]));
questionsF.push(new Question("Je passe sous un tunnel :", [0, 1, 0, -1], ["J'appelle un ami", "J'allume les phares", "Je pile devant un camion", ""]));
questionsF.push(new Question("Quand il neige:", [1, 0, -1, -1], ["J'allume les phares", "Je roule sans phares", "", ""]));
questionsF.push(new Question("J'ai la possibilit√© de d√©passer un cycliste:", [0, 1, 0, -1], ["Je lui balance une peau de banane", "Je mets le clignotant et le d√©passe", "Je le pousse pour qu'il aille plus vite", ""]));
questionsF.push(new Question("Lors d'un contr√¥le de police, je dois pr√©senter :", [0, 1, -1, -1], ["ma bouteille d'alcool", "mon permis de conduire", "", ""]));
questionsF.push(new Question("Ai-je le droit de stationner en plein milieu de la circulation?", [0, 1, -1, -1], ["Oui", "Non", "", ""]));
questionsF.push(new Question("Avec le permis B, je peux:", [1, 0, -1, -1], ["conduire une mario Kart", "voler un v√©lo", "", ""]));
questionsF.push(new Question("Le si√®ge conducteur est r√©glable :", [0, 1, -1, -1], ["en douceur", "en hauteur", "", ""]));
questionsF.push(new Question("Il est conseiller de mettre ses essuies-glaces :", [0, 1, -1, -1], ["Quand il fait soleil", "Quand il pleut", "", ""]));
questionsF.push(new Question("Quand dois-je mettre la ceinture de s√©curit√©:", [1, 0, 0, -1], ["Quand je suis en voiture", "Quand je dors", "Quand je me prom√®ne √† pied", ""]));
questionsF.push(new Question("Apr√®s le panneau 50 km/h, je peux:", [1, 0, 0, -1], ["rouler √† 50", "arr√™ter la voiture", "rouler √† 110", ""]));
questionsF.push(new Question("Que devez-vous faire lorsque vous voyez le feu passer au rouge ?", [0, 1, -1, -1], ["Acc√©l√©rer", "S'arr√™ter", "", ""]));
questionsF.push(new Question("Quel est le meilleur moment pour utiliser vos clignotants ?", [1, 0, -1, -1], ["Avant de tourner", "Apr√®s avoir tourn√©", "", ""]));
questionsF.push(new Question("Si vous entendez une sir√®ne de police, que devez-vous faire ?", [0, 1, -1, -1], ["Ignorer", "Se ranger sur le c√¥t√©", "", ""]));
questionsF.push(new Question("Quand devez-vous c√©der le passage ?", [0, 1, -1, -1], ["Toujours", "Seulement quand il y a d'autres voitures", "", ""]));
questionsF.push(new Question("Quel est l'effet de la vitesse sur votre temps de r√©action ?", [0, 1, -1, -1], ["Cela l'am√©liore", "Cela le ralentit", "", ""]));
questionsF.push(new Question("Que devez-vous faire si un pi√©ton traverse la route ?", [0, 1, -1, -1], ["Klaxonner", "S'arr√™ter pour le laisser passer", "", ""]));
questionsF.push(new Question("Si vous √™tes fatigu√© en conduisant, que devez-vous faire ?", [0, 1, -1, -1], ["Ouvrir la fen√™tre", "Trouver un endroit pour vous reposer", "", ""]));
questionsF.push(new Question("Que signifie un panneau de limitation de vitesse ?", [0, 1, -1, -1], ["Une suggestion", "Une obligation", "", ""]));
questionsF.push(new Question("Que devez-vous faire si vous √™tes impliqu√© dans un accident ?", [0, 1, -1, -1], ["Fuir", "√âchanger des informations avec l'autre conducteur", "", ""]));
questionsF.push(new Question("Quel est le r√¥le des r√©troviseurs ?", [0, 1, -1, -1], ["D√©corer la voiture", "Aider √† voir derri√®re vous", "", ""]));
questionsF.push(new Question("Que devez-vous faire avant de changer de voie ?", [1, 0, -1, -1], ["Regarder dans votre r√©troviseur", "Ne rien faire", "", ""]));

idQuestion = 1;

questionsM.push(new Question("Je vais √† Arzens. Je suivrai la d√©partementale N¬∞33 :", [1, 0, -1, -1], ["Oui", "Non", "", ""]));
questionsM.push(new Question("Ce panneau √©lectronique me signale que :", [1, 0, 0, 1], ["Je me trouve en exc√®s de vitesse", "Je vais recevoir une amende", "Je passe devant une √©cole", "Je dois ralentir"]));
questionsM.push(new Question("Quels sont les risques lorsque je roule dans une telle for√™t ? :", [1, 1, 1, 0], ["Percuter un animal sauvage", "Me perdre dans mon itin√©raire", "Un croisement diffcile", "Devoir allumer les feux de route"]));
questionsM.push(new Question("La conduite sous l'emprise de m√©dicaments de mani√®re encadr√©e est moins risqu√©e que la conduite sous alcool : ", [0, 1, -1, -1], ["Oui", "Non", "", ""]));
questionsM.push(new Question("Dans un rond point, je prends la deuxi√®me sortie :", [0, 0, 1, 0], ["Je mets mon clignotant droit", "Je me place forc√©ment sur la file de gauche", "Je c√®de le passage aux automobilistes arrivant √† gauche", "Je pourrai d√©passer les automobilistes de la file de gauche"]));
questionsM.push(new Question("Je dois n√©cessairement m'arr√™ter :", [0, 1, -1, -1], ["Oui", "Non", "", ""]));
questionsM.push(new Question("J'utilise les clignotants :", [1, 1, 1, 1], ["√Ä une intersection", "En sortant d'un rond point", "Pour m'arr√™ter sur le bas-c√¥t√©", "Lorsque je change de file sur l'autoroute"]));
questionsM.push(new Question("Ce v√©hicule stationn√© risque :", [1, 0, 1, 1], ["Une amende", "Un retrait de points", "Un ramassage par la fourri√®re", "De g√™ner d'autres automobilistes"]));
questionsM.push(new Question("J'ach√®te une voiture, ma plaque d'immatriculation :", [0, 0, 1, 0], ["Peut √™tre jaune √† l'arri√®re", "Doit syst√©matiquement √™tre renouvel√©e", "Peut √™tre associ√©e au d√©partement de mon choix", "Peut contenir n'importe quelle lettre de l'alphabet"]));
questionsM.push(new Question("Cette plaque signifie :", [0, 0, 1, -1], ["Que le v√©hicule est fabriqu√© en France", "Que le propri√©taire habite dans le 71", "Que le v√©hicule est r√©pertori√© au niveau national", ""]));
questionsM.push(new Question("Je passe au feu orange. Je risque une perte de points :", [0, 1, -1, -1], ["Oui", "Non", "", ""]));
questionsM.push(new Question("Pour √©viter un accident sur un coup de fatigue, je peux :", [1, 1, 1, 1], ["Emprunter des itin√©raires plus rapides", "M'arr√™ter r√©guli√®rement", "Respecter les limitations de vitesse", "Etre prudent (c'est vraiment ma voiture sur la photo donc √ßa n'arrive pas qu'aux autres !üôèüèª)"]));
questionsM.push(new Question("Un panneau carr√© indique une obligation : ", [0, 1, -1, -1], ["Oui", "Non", "", ""]));
questionsM.push(new Question("Dans cette situation :", [1, 1, 1, -1], ["Je quitte l'agglom√©ration de Pradelles", "Je suis sur un axe prioritaire", "Je suis sur la route nationale N¬∞88", ""]));
questionsM.push(new Question("Ce panneau m'indique que je dois rouler √† 50 km/h ou moins :", [1, 0, -1, -1], ["Oui", "Non", "", ""]));
questionsM.push(new Question("Quel panneau me signale un stationnement √† dur√©e limit√©e ?", [0, 1, 0, -1], ["Le panneau de gauche", "Le panneau central", "Le panneau de droite", ""]));
questionsM.push(new Question("Je peux conduire un scooter 125 avec mon permis B en ayant pass√© une formation suppl√©mentaire :", [1, 0, -1, -1], ["Oui", "Non", "", ""]));
questionsM.push(new Question("Les apps de signalements de radar sont ill√©gales. Il existe une exeption autorisant d'utiliser le t√©l√©phone au volant pour signaler un danger sur Waze.", [0, 0, 0, 1], ["Vrai et vrai", "Vrai et faux", "Faux et vrai", "Faux et faux"]));
questionsM.push(new Question("Pour regonfler les pneus de cette incroyable citadine rouge, je dois me r√©f√©rer aux indicateurs pr√©sents dans l'encadrement de porti√®re conducteur :", [1, 0, -1, -1], ["Oui", "Non", "", ""]));
questionsM.push(new Question("Ma voiture neuve est √©quip√©e de d√©tecteurs assistant ma conduite, notamment lors des d√©bordements de voie :", [0, 1, 1, -1], ["Je lui fais confiance, le but est que je me sente passager", "Ce sont des aides √† la conduite mais en aucun cas des substitutions", "Je ne devrais pas m'y habituer car toutes les voitures n'en b√©n√©ficient pas", ""]));
questionsM.push(new Question("J'entre sur une autoroute de mani√®re imminente :", [0, 0, 1, -1], ["Je v√©rifie l'angle mort gauche, j'acc√©l√®re puis je mets le clignotant gauche", "J'acc√©l√®re, je mets mon clignotant gauche puis je regarde l'angle mort gauche", "Je mets mon clignotant gauche, je regarde mon clignotant gauche puis j'acc√©l√®re en √©tant vigilant", ""]));
questionsM.push(new Question("Le contr√¥le technique est valable 2 ans pour toutes les voitures :", [0, 1, -1, -1], ["Oui", "Non", "", ""]));
questionsM.push(new Question("Je n'ai plus envie d'aller √† Tarbes. Je reste sur l'A64 :", [1, 0, -1, -1], ["Oui", "Non", "", ""]));
questionsM.push(new Question("Ce panneau indique :", [0, 1, 0, -1], ["L'entr√©e dans un lieu-dit dont le logo est un N stylis√©", "Une succession de virages dangereux dont le premier est forc√©ment √† droite", "Une obligation de ralentir", ""]));
questionsM.push(new Question("Afin de jouir librement de mon permis de conduire, je m'assure de :", [1, 1, 1, 0], ["Avoir obtenu un minimum de 20 points √† l'examen sans erreur √©liminatoire", "Avoir f√™t√© mon dix-huiti√®me anniversaire r√©volu", "Avoir un v√©hicule en ma possession l√©gale ou assur√© pour que je puisse le conduire", "Apposer le disque A sur le capot de mon v√©hicule"]));
questionsM.push(new Question("Certains radars automatiques peuvent :", [1, 0, 1, -1], ["Enregistrer les contraventions li√©es au non-port de la ceinture", "Enregistrer les nuisances sonores pour musique trop forte", "Capter un exc√®s de vitesse de moins de 10 km/h", ""]));
questionsM.push(new Question("Quel indicateur dois-je v√©rifier lorsque je me trouve en position 3 ?", [0, 0, 1, -1], ["Le niveau d'huile moteur", "Le niveau de liquide de direction assist√©e", "Le niveau de liquide de freinage", ""]));
questionsM.push(new Question("Un voyant de couleur orange peur signifier :", [1, 1, 0, 1], ["Un avertissement sur un potentiel danger imminent", "Un √©clairage pouvant g√™ner d'autres automobilistes", "La n√©cessit√© de m'arr√™ter imm√©diatement", "Un r√©servoir de carburant presque vide"]));
questionsM.push(new Question("Le bonhomme est devenu rouge, mais je n'ai pas fini de traverser :", [0, 0, 1, -1], ["Je m'arr√™te en attendant qu'il redevienne vert", "Je cours √† toute vitesse avant de me faire √©craser", "Je termine de traverser en acc√©l√©rant un peu le pas, mais en restant prudent", ""]));
questionsM.push(new Question("Ce nouveau panneau a √©t√© mis en vigueur depuis 2024. Il indique :", [1, 0, 0, 0], ["Une zone dans laquelle je dois prendre des mesures √©cologiques particuli√®res", "Une zone tr√®s fr√©quent√©e par les Renault", "Une zone interdite aux Renault", "Une zone r√©serv√©e aux Renault"]));

idQuestion = 1;

questionsD.push(new Question("Selon la cr√©atrice de hello kitty (Sanrio) de quel esp√®ce est kitty? :", [0, 0, 1, 0], ["Une chatte", "Une chatte blanche", "Une humaine", "bah oui c'est une chatte"]));
questionsD.push(new Question("Quel est l'√©tat de sant√© de grumpy cat? :", [1, 0, 0, -1], ["il est d√©c√®der snif", "il vas bien", "il est malade", ""]));
questionsD.push(new Question("Comment s'appel ce chien??? :", [0, 1, 0, 0], ["VodkaPomme", "Diabolo", "Scooby", "Diablo"]));
questionsD.push(new Question("Quelle est la marque de la moto que Shadow le h√©risson conduit, dans le jeu du m√™me nom? :", [0, 0, 1, 0], ["Yamada", "Harley", "Ducati", "Honda"]));
questionsD.push(new Question("Plus le temps il faut choisir! Qui √©craser vous pour sauvez les autres? :", [0, 1, 0, -1], ["l'Enfant", "l'Adulte", "La mamie", ""]));
questionsD.push(new Question("Vous trouvez un oeuf de Yoshi pendant votre Pique nique sur l'air d'autoroute quel est votre r√©action? :", [0, 1, 0, -1], ["Je le garde pour la contreBande", "Je le remet au autorit√© comp√©tentes", "Vous utilis√© l'oeuf pour faire une omelette", ""]));
questionsD.push(new Question("Vous voyez en tant que pieton un B√©b√© pinguoin perdu au milieux de la route (il pleure tr√®s fort et de fa√ßon insupportable) que faite vous? :", [-1, 1, 1, 0], ["Je le laisse au milieux de la route", "Je l'aide a retrouver sa maman", "Je le jete dans le vide ou dans la bouche d'√©gout la plus proche", "La r√©ponse D"]));
questionsD.push(new Question("Vous voyez un camion qui pile que faites vous dans cette situation? :", [0, 1, 0, 1], ["Vous priez", "Vous priez", "Vous vous la jouer Batman et esquivez le camion", "Vous vous dites qu'il valait peut-√™tre mieux lire le texte sur le camion en fin de compte..."]));
questionsD.push(new Question("Dans Doctor Who a qu'elle esp√®ce appartient le docteur? :", [0, 0, 1, 0], ["Les daleks", "CyberMan", "Seigneur du temps", "Les Anges"]));
questionsD.push(new Question("Combien de dinosaur y a t'il sur la map parc Dino Dino? (on ne compte pas les doublon):", [0, 0, 1, 0], ["1", "4", "5", "8"]));
questionsD.push(new Question("COMMENT PREND-T-ONT UN ROND POINT (EN FRANCE)? :", [0, 1, 0, 0], ["Par la gauche", "Par la droite", "On le coupe (vous √™tes mort)", "on le prend pas"]));
questionsD.push(new Question("Pourquoi les fant√¥mes sont-ils de si mauvais menteurs? :", [0, 0, 1, -1], ["Par ce qu'on les entends pas", "Par ce qu'on vois a travers eux", "Parce qu‚Äôon peut lire √† travers eux", ""]));
questionsD.push(new Question("Dans quel jeu appare√Æt pour la premi√®re fois le King Boo? :", [0, 1, 0, -1], ["Mario party 3", "Luigi Mansion", "Mario Kart double Dash", ""]));
questionsD.push(new Question("Quel est le personnage principal de 'Pat Patrouille'? :", [0, 1, 0, 0], ["Chase", "Ryder", "Rubble", "Marcus"]));
questionsD.push(new Question("Combien de fois appara√Æt 'Scrappy doo' dans Scooby doo? :", [0, 0, 1, 0], ["8", "19", "16", "25"]));
questionsD.push(new Question("Il vas faire tout noir!!! :", [0, 0, 1, -1], ["euh?", "ok", "ta gueule!!!", ""]));
questionsD.push(new Question("Dans combien de License appara√Æt 'Terry Bogard?' :", [1, 0, 0, -1], ["12", "8", "3", ""]));
questionsD.push(new Question("J'arrive √† la sortie en direction des Hautes-Pyr√©n√©es d'ici 10 minutes. Que dois-je dire √† la personne que je vais voir pour pr√©venir ? :", [0, 0, 1, -1], ["j'arrive bient√¥t", "je suis quasiment l√†", "je vais pas Tarber", ""]));
questionsD.push(new Question("Il parait que les automobilistes les plus dangereux de France sont majoritairement issus de Haute-Garonne. Pourquoi ? :", [0, 0, 1, -1], ["il fallait bien mettre un d√©partement au pif", "parce que ces gens ont... nothing Toulouse", "c'√©tait soit eux soit les Ni√ßois", ""]));
questionsD.push(new Question("Que signifie le nombre 2147483647 ? :", [1, 0, 1, -1], ["la population mondiale en 2030", "la valeur max d'un bool√©en en code", "mon compte en banque si j'√©taps pay√© √† faire des jeux de mots pourris", ""]));
questionsD.push(new Question("Qu'est ce que la pr√©compilation de tokens dans une API simul√©e en backend r√©actif distant? :", [0, 0, 1, -1], ["du chinois", "bon week-end", "tkt quelqu'un fera une veille dessus", ""]));
questionsD.push(new Question("Qui est Sheik dans la s√©rie zelda? :", [1, 0, 0, 0], ["Zelda", "Link", "Ganon", "Sheik"]));
questionsD.push(new Question("Comment naissent les Orcs de Warhammer? :", [0, 1, 0, -1], ["ils naissent simplement", "ils poussent", "ils popent", ""]));
questionsD.push(new Question("Sur le flanc du pneu les t√©moins d'usure peuvent √™tre signal√©s par? :", [1, 0, 1, 1], ["La mention TWI", "Un triangle", "La mention 'T√©moin'", "Le logo du fabricant"]));
questionsD.push(new Question("Quelle proposition ne d√©signe pas la valeur d√©cimale du nombre 51? :", [0, 0, 1, 0], ["11011111", "33", "3101", "43"]));
questionsD.push(new Question("En combien de cases est divis√© la map de Zelda Wind Waker? :", [1, 0, 0, 0], ["49", "35", "64", "21"]));
questionsD.push(new Question("Pourquoi Nox veut remonter le temps? :", [1, 1, 0, -1], ["Pour R√©parer ses erreurs", "Pour sauver sa famille", "Pour faire le mal", ""]));
questionsD.push(new Question("Quelle est la toute premi√®re console r√©pertorier au monde? :", [1, 0, -1, -1], ["l'Odyssey de Magnavox", "l'Ataris PONG", "", ""]));
questionsD.push(new Question("En quelle ann√©e a √©t√© lanc√© le TGV en France? :", [0, 0, 1, 0], ["1988", "1971", "1981", "1991"]));
questionsD.push(new Question("Parmi 'abcd', quelle lettre qui ne peut pas √™tre juste avant une voyelle est entre deux lettres qui ne se suivent pas mais ne pr√©c√®de pas une lettre qui est juste avant la lettre concern√©e? :", [1, 0, 0, 0], ["C", "A", "D", "B"]));

questionsDb.push(questionsF);
questionsDb.push(questionsM);
questionsDb.push(questionsD);

function Start(mode) {
	jeu = new Jeu();
	jeu.mode = mode;
	jeu.totalQuestions = questionsNumber;
	jeu.ChoixQuestions();

	if (document.getElementById("NomJ1").value != "")
		jeu.joueurs.push(new Joueur(document.getElementById("NomJ1").value, 1));

	if (document.getElementById("NomJ2").value != "")
		jeu.joueurs.push(new Joueur(document.getElementById("NomJ2").value, 2));

	if (document.getElementById("NomJ3").value != "")
		jeu.joueurs.push(new Joueur(document.getElementById("NomJ3").value, 3));

	if (document.getElementById("NomJ4").value != "") {
		jeu.joueurs.push(new Joueur(document.getElementById("NomJ4").value, 4));
	}

	if (jeu.joueurs.length == 0)
		jeu.joueurs.push(new Joueur("Anonyme"));

	document.getElementById("QuestionContainer").classList.remove("hidden");
	document.getElementById("ReponseContainer").classList.remove("hidden");
	document.getElementById("ValContainer").classList.remove("hidden");
	document.getElementById("StartMenu").classList.add("hidden");

	jeu.joueurActuel = 0;
	jeu.ProchainJoueur();
}